type Course {
    _id: ID!
    title: String!
    teacher: String
    description: String!
    topic: String
    people: [Student]
}

type Student{
    _id: ID!
    name: String!
    email: String!
}

type Query {
    "Return all courses"
        getCourses: [Course]
    "Return one Course"
        getCourse(id: ID!): Course
    "Return all Students"
        getStudents: [Student]
    "Return one Course"
        getStudent(id: ID!): Student
}

input CourseInput{
    title: String!
    teacher: String
    description: String!
    topic: String
}

input CourseEditInput{
    title: String
    teacher: String
    description: String
    topic: String
}

input StudentInput{
    name: String!
    email: String!
}

input StudentEditInput{
    name: String
    email: String
}

type Mutation{
    "Create course"
    createCourse(input: CourseInput!): Course
    "Edit Course"
    editCourse(_id: ID!, input: CourseEditInput): Course
    "Remove Course"
    removeCourse(_id: ID!): Boolean
    "Create Student"
    createStudent(input: StudentInput!): Student
    "Edit Student"
    editStudent(_id: ID!, input: StudentEditInput): Student
    "Remove Student"
    removeStudent(_id: ID!): Boolean
    "Add student to course"
    addStudent(courseID: ID!, studentID: ID!): Course
}